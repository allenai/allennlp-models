name: CI

on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
  schedule:
    - cron: '17 10 * * *' # run at 10 AM UTC every day.

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - uses: actions/cache@v1
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ runner.os }}-pydeps-${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('dev-requirements.txt') }}

    - name: Install requirements
      run: |
        pip install --upgrade pip setuptools wheel
        pip install -e .
        pip install -r dev-requirements.txt

    - name: Build Package
      run: |
        python setup.py bdist_wheel sdist

    - name: Save package
      uses: actions/upload-artifact@v1
      with:
        name: models-package
        path: dist

  test:
    name: Test
    needs: [build]  # needs the package artifact created from 'build_package' job.
    runs-on: ubuntu-latest

    steps:
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install requirements
      run: |
        pip install --upgrade pip setuptools wheel

    - name: Download models package
      uses: actions/download-artifact@v1
      with:
        name: models-package
        path: dist

    - name: Install models package
      run: |
        pip install $(ls dist/*.whl)

    - name: Show pip freeze
      run: |
        pip freeze

    - name: Ensure models plugin found
      run: |
        python -c 'from allennlp.common.plugins import discover_plugins; assert "allennlp_plugins.allennlp_models" in list(discover_plugins())'

    - name: Ensure models plugin can be imported
      run: |
        python -c 'import allennlp_plugins.allennlp_models' && echo "ok here"
        python -c 'import allennlp_plugins' || echo "this shouldn't have worked"

  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.6', '3.7']

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}

    - uses: actions/cache@v1
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ runner.os }}-pydeps-${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('dev-requirements.txt') }}

    - name: Install requirements
      run: |
        pip install --upgrade pip setuptools wheel
        pip install --upgrade git+https://github.com/allenai/allennlp.git@master
        pip install --upgrade --upgrade-strategy eager -r <(grep -Ev '^allennlp$' requirements.txt)
        pip install --upgrade --upgrade-strategy eager -r dev-requirements.txt

    - name: Show pip freeze
      run: |
        pip freeze

    - name: Lint
      run: |
        make lint

    - name: Type check
      run: |
        make typecheck

    - name: Run tests
      run: |
        make test-with-cov

    - name: Upload coverage to Codecov
      if: matrix.python == '3.7'
      run: |
        # Ignore codecov failures as the codecov server is not
        # very reliable but we don't want to report a failure
        # in the github UI just because the coverage report failed to
        # be published.
        codecov || echo "codecov upload failed"
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
