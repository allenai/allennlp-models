name: CI

on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
  schedule:
    - cron: '17 10 * * *' # run at 10 AM UTC every day.

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.6', '3.7']

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}

    - uses: actions/cache@v1
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ runner.os }}-pydeps-${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('dev-requirements.txt') }}

    - name: Install requirements
      run: |
        pip install --upgrade pip setuptools wheel
        pip install --upgrade --upgrade-strategy eager -r requirements.txt
        pip install --upgrade --upgrade-strategy eager -r dev-requirements.txt

    - name: Show pip freeze
      run: |
        pip freeze

    - name: Format
      run: |
        make format

    - name: Lint
      run: |
        make lint

    - name: Type check
      run: |
        make typecheck

    - name: Run tests
      run: |
        make test-with-cov

    - name: Upload coverage to Codecov
      if: matrix.python == '3.7'
      run: |
        # Ignore codecov failures as the codecov server is not
        # very reliable but we don't want to report a failure
        # in the github UI just because the coverage report failed to
        # be published.
        codecov || echo "codecov upload failed"
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  pretrained:
    runs-on: [self-hosted]

    steps:
    - uses: actions/checkout@v2

    - name: Set Docker tag
      run: |
        echo "::set-env name=DOCKER_TAG::$GITHUB_SHA";

    - name: Build test image
      run: |
        make docker-test-image DOCKER_TAG=$DOCKER_TAG

    - name: Run pretrained tests
      run: |
        make docker-test-run DOCKER_TAG=$DOCKER_TAG ARGS='test-pretrained'

  gpu_checks:
    runs-on: [self-hosted, GPU]

    steps:
    - uses: actions/checkout@v2

    - name: Set Docker tag
      run: |
        echo "::set-env name=DOCKER_TAG::$GITHUB_SHA";

    - name: Build test image
      run: |
        make docker-test-image DOCKER_TAG=$DOCKER_TAG

    - name: Run GPU tests
      run: |
        make docker-test-run DOCKER_TAG=$DOCKER_TAG ARGS='gpu-test'
