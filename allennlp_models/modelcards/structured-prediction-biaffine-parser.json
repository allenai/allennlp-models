{
    "id": "structured-prediction-biaffine-parser",
    "registered_model_name": "biaffine_parser",
    "registered_predictor_name": null,
    "display_name": "Deep Biaffine Attention for Neural Dependency Parsing",
    "task_id": "dependency-parsing",
    "model_details": {
        "description": "This dependency parser follows the model of [Deep Biaffine Attention for Neural Dependency Parsing (Dozat and Manning, 2016)](https://api.semanticscholar.org/CorpusID:7942973) .\n\nWord representations are generated using a bidirectional LSTM, followed by separate biaffine classifiers for pairs of words, predicting whether a directed arc exists between the two words and the dependency label the arc should have. Decoding can either be done greedily, or the optimal Minimum Spanning Tree can be decoded using Edmond's algorithm by viewing the dependency tree as a MST on a fully connected graph, where nodes are words and edges are scored dependency arcs.",
        "short_description": "A neural model for dependency parsing using biaffine classifiers on top of a bidirectional LSTM.",
        "developed_by": "Dozat et al",
        "contributed_by": null,
        "date": "2020-04-06",
        "version": "1",
        "model_type": null,
        "paper": {
            "citation": "\n@article{Dozat2017DeepBA,\ntitle={Deep Biaffine Attention for Neural Dependency Parsing},\nauthor={Timothy Dozat and Christopher D. Manning},\njournal={ArXiv},\nyear={2017},\nvolume={abs/1611.01734}}\n",
            "title": "Deep Biaffine Attention for Neural Dependency Parsing (Dozat and Manning, 2016)",
            "url": "https://api.semanticscholar.org/CorpusID:7942973"
        },
        "license": null,
        "contact": "allennlp-contact@allenai.org"
    },
    "intended_use": {
        "primary_uses": null,
        "primary_users": null,
        "out_of_scope_use_cases": null
    },
    "factors": {
        "relevant_factors": null,
        "evaluation_factors": null
    },
    "metrics": {
        "model_performance_measures": "Attachment scores and exact matches (UAS, LAS, UEM, LEM)",
        "decision_thresholds": null,
        "variation_approaches": null
    },
    "evaluation_data": {
        "dataset": {
            "name": "PTB 3.0",
            "url": "https://catalog.ldc.upenn.edu/LDC99T42",
            "notes": "The dependency parser was evaluated on the Penn Tree Bank dataset. Unfortunately we cannot release this data due to licensing restrictions by the LDC. You can download the PTB data from the LDC website.",
            "processed_url": "/path/to/dataset"
        },
        "motivation": null,
        "preprocessing": null
    },
    "training_data": {
        "dataset": {
            "name": "PTB 3.0",
            "url": "https://catalog.ldc.upenn.edu/LDC99T42",
            "notes": "The dependency parser was evaluated on the Penn Tree Bank dataset. Unfortunately we cannot release this data due to licensing restrictions by the LDC. You can download the PTB data from the LDC website.",
            "processed_url": "/path/to/dataset"
        },
        "motivation": null,
        "preprocessing": null
    },
    "quantitative_analyses": {
        "unitary_results": "The parser achieves 95.57% and 94.44% unlabeled and labeled attachement score using gold POS tags. For predicted POS tags, it achieves 94.81% UAS and 92.86% LAS respectively.",
        "intersectional_results": null
    },
    "model_caveats_and_recommendations": {
        "caveats_and_recommendations": null
    },
    "model_ethical_considerations": {
        "ethical_considerations": null
    },
    "model_usage": {
        "archive_file": "biaffine-dependency-parser-ptb-2020.04.06.tar.gz",
        "training_config": "structured_prediction/dependency_parser.jsonnet",
        "install_instructions": "pip install allennlp==2.1.0 allennlp-models==2.1.0"
    }
}
